// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Movie{
  id Int @default(autoincrement()) @id
  title String
  year  Int
  genre String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model User{
  id Int @id @default(autoincrement())
  firstName String
  lastName String?
  userName String @unique
  email String @unique
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bio String?
  avator String?
  followers User[] @relation("FollowRelation",references: [id])
  following User[] @relation("FollowRelation",references: [id])
  photos Photo[]
}

model Photo{
  id Int @id @default(autoincrement())
  userId Int
  file String
  caption String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  hashtags Hashtag[]
  user User @relation(fields: [userId],references:[id])
  likes Like[]
}

model Hashtag{
  id Int @id @default(autoincrement())
  hashtag String @unique
  photos Photo[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like{
   id Int @id @default(autoincrement())
   userId Int
   photoId Int 
   photo Photo  @relation(fields: [photoId],references:[id])
   user User @relation(fields: [userId],references:[id])
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
   @@unique([photoId,userId])
}

model Comment{
   id Int @id @default(autoincrement())
   user User @relation(fields: [userId],references:[id])
   photo Photo @relation(fields: [photoId],references:[id])
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
   payload String
   photoId Int
   userId Int
}